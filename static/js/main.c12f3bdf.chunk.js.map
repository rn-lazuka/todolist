{"version":3,"sources":["AddNewItemForm.js","TodoListTask.js","TodoListTasks.js","TodoListFooter.js","TodoListTitle.js","api.js","reducer.js","ToDoList.js","App.js","serviceWorker.js","store.js","index.js"],"names":["AddNewItemForm","state","error","title","onChangingValue","e","setState","currentTarget","value","onAddItemClick","newText","props","addTask","onEnterPress","key","render","classForInput","className","onKeyPress","onChange","type","placeholder","onClick","React","Component","TodoListTask","editMode","task","activateEditMode","deactivateEditMode","changeTitle","onTitleChanged","newTitle","onIsDoneChanged","status","checked","changeStatus","deleteTask","id","classForTask","onBlur","autoFocus","priority","TodoListTasks","tasksElements","tasks","map","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onHideFiltersClick","isHiddenValue","onShowFiltersClick","classForAll","filterValue","classForCompleted","classForActive","TodoListTitle","changeToDoListTitle","deleteToDoList","instance","axios","baseURL","withCredentials","headers","api","get","post","todolistId","delete","taskId","newTask","put","ADD_TODOLIST","ADD_TASK","CHANGE_TASK","DELETE_TASK","DELETE_TODOLIST","SET_TODOLISTS","SET_TASKS","initialState","todolists","ToDoList","nextTaskId","restoreState","setTasks","newFilterValue","addNewTask","changeTask","filter","t","this","ConnectedToDoList","connect","toDoList","dispatch","getState","then","res","data","resultCode","changeTaskAC","item","deleteTaskAC","deleteToDoListAC","changeToDoListTitleAC","items","setTaskAC","addNewTaskAC","App","addToDoList","setTodoLists","ConnectedApp","newToDoList","Boolean","window","location","hostname","match","store","createStore","action","tl","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c12f3bdf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass AddNewItemForm extends React.Component {\r\n    state = {error: false,\r\n    title:''};\r\n\r\n    onChangingValue = (e) => {\r\n        this.setState({error: false,title:e.currentTarget.value})\r\n    };\r\n    onAddItemClick = () => {\r\n        let newText = this.state.title;\r\n        this.setState({title:''});\r\n        if (newText === \"\") {\r\n            this.setState({error: true})\r\n        } else {\r\n            this.setState({error: false});\r\n            this.props.addTask(newText);\r\n        }\r\n    };\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.onAddItemClick();\r\n        }\r\n    };\r\n    render = () => {\r\n        let classForInput = this.state.error ? \"error\" : \"\";\r\n        return (\r\n            <div className=\"todoList-header\">\r\n                <h3 className=\"todoList-header__title\">{this.props.title}</h3>\r\n                <div className=\"todoList-newTaskForm\">\r\n                    <input onKeyPress={this.onEnterPress} onChange={this.onChangingValue} className={classForInput}\r\n                     value={this.state.title}  type=\"text\" placeholder=\"New item name\" />\r\n                    <button onClick={this.onAddItemClick} >Add</button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AddNewItemForm;","import React from 'react';\r\nimport './App.css';\r\n\r\nclass TodoListTask extends React.Component {\r\n    state ={editMode:false,\r\n        title:this.props.task.title,\r\n        classForInput:\"\"\r\n    };\r\n    activateEditMode =()=>{\r\n     this.setState({editMode:true})\r\n    };\r\n    deactivateEditMode =()=>{\r\n        if(this.state.title!==\"\") {\r\n            this.props.changeTitle(this.props.task, this.state.title);\r\n            this.setState({editMode: false});\r\n        } else {\r\n            this.setState({classForInput: \"error\"});\r\n        }\r\n    };\r\n\r\n    onTitleChanged =(e)=>{\r\n        let newTitle =  e.currentTarget.value;\r\n        this.setState({title:newTitle});\r\n    };\r\n\r\n    onIsDoneChanged = (e) => {\r\n        let status = e.currentTarget.checked ? 2 : 0;\r\n        this.props.changeStatus(this.props.task,status )\r\n    };\r\n    deleteTask=()=>{\r\n        this.props.deleteTask(this.props.task.id)\r\n    };\r\n    render = () => {\r\n        let classForTask = this.props.task.status===2?\"todoList-task done\":\"todoList-task\";\r\n        return (\r\n            <div className={classForTask}>\r\n                <input type=\"checkbox\" checked={this.props.task.status===2} onChange={this.onIsDoneChanged}/>\r\n                {this.state.editMode\r\n                ?<input className={this.state.classForInput} onChange={this.onTitleChanged} onBlur={this.deactivateEditMode} autoFocus={true} value={this.state.title}/>\r\n                :<span onClick={this.activateEditMode}>{this.props.task.id} -{this.props.task.title}</span>}\r\n                <span>, priority: {this.props.task.priority}</span>\r\n                <button onClick={this.deleteTask}>X</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TodoListTask;","import React from 'react';\r\nimport './App.css';\r\nimport TodoListTask from \"./TodoListTask\";\r\n\r\nclass TodoListTasks extends React.Component {\r\n    render = () => {\r\n        let tasksElements = this.props.tasks.map (task => <TodoListTask deleteTask={this.props.deleteTask}\r\n                                                                        task={task}\r\n                                                                        changeTitle={this.props.changeTitle}\r\n                                                                        changeStatus={this.props.changeStatus}/>);\r\n\r\n        return (\r\n\r\n            <div className=\"todoList-tasks\">\r\n\r\n                {tasksElements}\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TodoListTasks;","import React from 'react';\r\nimport './App.css';\r\n\r\nclass TodoListFooter extends React.Component {\r\n    state = {\r\n        isHidden: false\r\n    };\r\n\r\n    onAllFilterClick = () => {this.props.changeFilter(\"All\")\r\n    };\r\n    onCompletedFilterClick = () => {this.props.changeFilter(\"Completed\")};\r\n    onActiveFilterClick = () => {this.props.changeFilter(\"Active\")};\r\n\r\n    onHideFiltersClick = () => {\r\n        let isHiddenValue = this.state.isHidden;\r\n        this.setState({isHidden: !isHiddenValue})\r\n    };\r\n    onShowFiltersClick = () => {\r\n        let isHiddenValue = this.state.isHidden;\r\n        this.setState({isHidden: !isHiddenValue})\r\n    };\r\n    render = () => {\r\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n        return (\r\n            <div className=\"todoList-footer\">\r\n                {!this.state.isHidden && <div>\r\n                    <button onClick={this.onAllFilterClick} className={classForAll}>All\r\n                    </button>\r\n                    <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed\r\n                    </button>\r\n                    <button onClick={this.onActiveFilterClick} className={classForActive}>Active\r\n                    </button>\r\n                </div>}\r\n                {!this.state.isHidden && <span onClick={this.onHideFiltersClick}>Hide</span>}\r\n                {this.state.isHidden && <span onClick={this.onShowFiltersClick}>Show</span>}\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default TodoListFooter;","import React from 'react';\r\nimport './App.css';\r\n\r\nclass TodoListTitle extends React.Component {\r\n    state = {\r\n        title: this.props.title,\r\n        editMode: false\r\n    };\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        if (this.state.title !== \"\") {\r\n            this.props.changeToDoListTitle(this.state.title);\r\n            this.setState({editMode: false});\r\n        } else {\r\n            this.setState({classForInput: \"error\"});\r\n        }\r\n    };\r\n\r\n    onTitleChanged = (e) => {\r\n        let newTitle = e.currentTarget.value;\r\n        this.setState({title: newTitle});\r\n    };\r\n    render = () => {\r\n        return (\r\n            <div className=\"todoList-header\">\r\n                {this.state.editMode\r\n                    ? <input className={this.state.classForInput} onChange={this.onTitleChanged}\r\n                             onBlur={this.deactivateEditMode} autoFocus={true} value={this.state.title}/> :\r\n                    <h3 className=\"todoList-header__title\" onClick={this.activateEditMode}>{this.state.title}\r\n                    </h3>\r\n               }  <button onClick={this.props.deleteToDoList}>X</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoListTitle;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/todo-lists\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"6d54c1cb-0079-4662-b13d-27d4ae8cf67d\"}\r\n});\r\n\r\nexport const api = {\r\n    getToDoLists() {\r\n        return instance.get()\r\n    },\r\n    addToDoList(title) {\r\n        return instance.post(\"\", {title: title},\r\n        )\r\n    },\r\n    getTasks(todolistId) {\r\n        return instance.get(`/${todolistId}/tasks`)\r\n    },\r\n    deleteToDoList(todolistId) {\r\n        return instance.delete(`/${todolistId}`)\r\n    },\r\n    addTask(todolistId,newText) {\r\n        return instance.post(`/${todolistId}/tasks`, {title: newText})\r\n    },\r\n    deleteTask(todolistId, taskId) {\r\n        return instance.delete(`/${todolistId}/tasks/${taskId}`)\r\n    },\r\n    changeTask (todolistId,taskId,newTask){\r\n        return instance.put(`/${todolistId}/tasks/${taskId}`, newTask)\r\n    },\r\n    changeToDoListTitle (todolistId,title){\r\n        return instance.put(`/${todolistId}/`, title)\r\n    }\r\n\r\n};","import {api} from \"./api\";\r\n\r\nexport const ADD_TODOLIST = \"TODOLIST/REDUCER/ADD_TODOLIST\";\r\nexport const ADD_TASK = \"TODOLIST/REDUCER/ADD_TASK\";\r\nexport const CHANGE_TASK = \"TODOLIST/REDUCER/CHANGE_TASK\";\r\nexport const DELETE_TASK = \"TODOLIST/REDUCER/DELETE_TASK\";\r\nexport const DELETE_TODOLIST = \"TODOLIST/REDUCER/DELETE_TODOLIST\";\r\nexport const SET_TODOLISTS = \"TODOLIST/REDUCER/SET_TODOLISTS\";\r\nexport const SET_TASKS = \"TODOLIST/REDUCER/SET_TASKS\";\r\nexport const CHANGE_TODOLIST_TITLE = \"TODOLIST/REDUCER/CHANGE_TODOLIST_TITLE\";\r\n\r\n\r\nconst initialState = {\r\n    todolists: [/*{\r\n        id: 0, title: \"WhatToEat\", tasks: [{id: 0, title: \"Pizza\", isDone: false, priority: \"low\"},\r\n            {id: 1, title: \"More pizza\", isDone: false, priority: \"low\"}, {\r\n                id: 2,\r\n                title: \"IceCream\",\r\n                isDone: false,\r\n                priority: \"low\"\r\n            }]\r\n    },\r\n        {\r\n            id: 1, title: \"WhatToLearn\", tasks: [{id: 0, title: \"React\", isDone: false, priority: \"low\"},\r\n                {id: 1, title: \"Redux\", isDone: false, priority: \"low\"}, {\r\n                    id: 2,\r\n                    title: \"Hooks\",\r\n                    isDone: false,\r\n                    priority: \"low\"\r\n                }]\r\n        }*/]\r\n};\r\n\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, action.newToDoList],\r\n            };\r\n        case SET_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(tl => ({...tl, tasks: []}))\r\n            };\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {...tl, tasks: action.tasks}\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {...tl, tasks: [...tl.tasks, action.newTask]}\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case CHANGE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                        if (tl.id === action.todolistId) {\r\n                            return {\r\n                                ...tl,\r\n                                tasks: tl.tasks.map(t => {\r\n                                        if (t.id !== action.newTask.id) {\r\n                                            return t\r\n                                        } else {\r\n                                            return action.newTask\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                        } else {\r\n                            return tl\r\n                        }\r\n                    }\r\n                )\r\n            };\r\n            case CHANGE_TODOLIST_TITLE:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                        if (tl.id === action.todolistId) {\r\n                            return {\r\n                                ...tl,\r\n                                title: action.title\r\n                            }\r\n                        } else {\r\n                            return tl\r\n                        }\r\n                    }\r\n                )\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                        if (tl.id === action.todolistId) {\r\n                            return {...tl, tasks: tl.tasks.filter(t => t.id !== action.taskId)}\r\n                        } else {\r\n                            return tl\r\n                        }\r\n                    }\r\n                )\r\n            };\r\n        case DELETE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(tl => tl.id !== action.todolistId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addToDoListAC = (newToDoList) => ({type: ADD_TODOLIST, newToDoList});\r\nexport const setTodoListsAC = (todolists) => ({type: SET_TODOLISTS, todolists});\r\nexport const setTaskAC = (tasks, todolistId) => ({type: SET_TASKS, tasks, todolistId});\r\nexport const addNewTaskAC = (newTask, todolistId) => ({type: ADD_TASK, newTask, todolistId});\r\nexport const changeTaskAC = (newTask, todolistId) => ({type: CHANGE_TASK, newTask, todolistId});\r\nexport const deleteToDoListAC = (todolistId) => ({type: DELETE_TODOLIST, todolistId});\r\nexport const deleteTaskAC = (todolistId, taskId) => ({type: DELETE_TASK, todolistId, taskId});\r\nexport const changeToDoListTitleAC = (todolistId, title) => ({type: CHANGE_TODOLIST_TITLE, todolistId, title});\r\n\r\n\r\n\r\n\r\nexport const setTodoLists = () => {\r\n    return (dispatch, getState) => {\r\n    api.getToDoLists().then(res => {\r\n        dispatch(setTodoListsAC(res.data))\r\n    });\r\n}};\r\nexport const setTasks = (todolistId) => {\r\n    return (dispatch, getState) => {\r\n        api.getTasks(todolistId).then(res => {\r\n            const tasks = res.data.items;\r\n            dispatch(setTaskAC(tasks, todolistId))\r\n        });\r\n}};\r\n\r\nexport const addToDoList = (title) => {\r\n    return (dispatch, getState) => {\r\n        api.addToDoList(title).then(res => {\r\n     dispatch(addToDoListAC(res.data.data.item))\r\n    });\r\n}};\r\nexport const addNewTask = (newText,todolistId) => {\r\n    return (dispatch, getState) => {\r\n        api.addTask(todolistId, newText)\r\n            .then(res => {\r\n                const task = res.data.data.item;\r\n               dispatch(addNewTaskAC(task, todolistId))\r\n    });\r\n}};\r\n\r\nexport const changeTask = (task, newTask, todolistId) => {\r\n    return (dispatch, getState) => {\r\n        api.changeTask(todolistId, task.id, newTask)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                  dispatch(changeTaskAC(res.data.data.item, todolistId))\r\n                }\r\n            });\r\n}};\r\n\r\nexport const changeToDoListTitle = (todolistId, title) => {\r\n    return (dispatch, getState) => {\r\n        api.changeToDoListTitle(todolistId, title)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                  dispatch(changeToDoListTitleAC(todolistId, title))\r\n                }\r\n            });\r\n}};\r\n\r\nexport const deleteToDoList = (todolistId) => {\r\n    return (dispatch, getState) => {\r\n        api.deleteToDoList(todolistId)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                   dispatch(deleteToDoListAC(todolistId))\r\n                }\r\n            });\r\n}};\r\n\r\nexport const deleteTask = (todolistId, taskId) => {\r\n    return (dispatch, getState) => {\r\n        api.deleteTask(todolistId, taskId).then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(deleteTaskAC(todolistId, taskId))\r\n            }\r\n        });\r\n}};\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AddNewItemForm from \"./AddNewItemForm\";\r\nimport TodoListTasks from \"./TodoListTasks\";\r\nimport TodoListFooter from \"./TodoListFooter\";\r\nimport TodoListTitle from \"./TodoListTitle\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeToDoListTitle,\r\n    setTasks,\r\n    addNewTask,\r\n    deleteToDoList,\r\n    changeTask,\r\n    deleteTask\r\n} from \"./reducer\";\r\n\r\n\r\nclass ToDoList extends React.Component {\r\n    nextTaskId = 0;\r\n    state = {\r\n        filterValue: \"All\",\r\n        tasks: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.restoreState()\r\n    }\r\n\r\n    restoreState = () => {\r\n        const todolistId = this.props.id;\r\n        this.props.setTasks(todolistId);\r\n    };\r\n\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        });\r\n    };\r\n\r\n    addTask = (newText) => {\r\n        const todolistId = this.props.id;\r\n        this.props.addNewTask(newText, todolistId)\r\n    };\r\n\r\n    changeTask = (task, newTask) => {\r\n        const todolistId = this.props.id;\r\n        this.props.changeTask(task, newTask, todolistId);\r\n    };\r\n\r\n    changeStatus = (task, status) => {\r\n        let newTask = {...task, status: status};\r\n        this.changeTask(task, newTask);\r\n    };\r\n\r\n    changeTitle = (task, title) => {\r\n        let newTask = {...task, title: title};\r\n        this.changeTask(task, newTask)\r\n    };\r\n\r\n    changeToDoListTitle = (title) => {\r\n        const todolistId = this.props.id;\r\n        this.props.changeToDoListTitle(todolistId, title);\r\n    };\r\n\r\n    deleteToDoList = () => {\r\n        const todolistId = this.props.id;\r\n        this.props.deleteToDoList(todolistId);\r\n    };\r\n\r\n    deleteTask = (taskId) => {\r\n        const todolistId = this.props.id;\r\n        this.props.deleteTask(todolistId, taskId);\r\n    };\r\n\r\n    render = () => {\r\n        let {tasks = []} = this.props;\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"todoList\">\r\n                    <div className={'todoList-header'}>\r\n                        <TodoListTitle changeToDoListTitle={this.changeToDoListTitle}\r\n                                       deleteToDoList={this.deleteToDoList} title={this.props.title}/>\r\n                        <AddNewItemForm addTask={this.addTask}/>\r\n\r\n                    </div>\r\n                    <TodoListTasks changeTitle={this.changeTitle}\r\n                                   deleteTask={this.deleteTask}\r\n                                   changeStatus={this.changeStatus}\r\n                                   tasks={tasks.filter((t) => {\r\n                                       switch (this.state.filterValue) {\r\n                                           case \"All\":\r\n                                               return true;\r\n                                           case \"Completed\":\r\n                                               return t.status === 2;\r\n                                           case \"Active\":\r\n                                               return t.status === 0;\r\n                                           default:\r\n                                               return true;\r\n                                       }\r\n                                   })}/>\r\n                    <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\r\n                </div>\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        toDoList: state.todolists\r\n    }\r\n};\r\n\r\nconst ConnectedToDoList = connect(mapStateToProps, {changeTask,deleteTask,deleteToDoList,changeToDoListTitle,setTasks,addNewTask})(ToDoList);\r\nexport default ConnectedToDoList;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AddNewItemForm from \"./AddNewItemForm\";\r\nimport ConnectedToDoList from \"./ToDoList\";\r\nimport {connect} from \"react-redux\";\r\nimport {addToDoList, setTodoLists} from \"./reducer\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n   componentDidMount() {\r\n       this.props.setTodoLists()\r\n   }\r\n\r\n    addToDoList = (title) => {\r\n        this.props.addToDoList(title)\r\n    };\r\n\r\n    render = () => {\r\n        const todolists = this.props.toDoList.map(t => <ConnectedToDoList id={t.id} title={t.title} tasks={t.tasks}/>);\r\n        return (\r\n            <>\r\n                <div>\r\n                    <AddNewItemForm addTask={this.addToDoList}/>\r\n                </div>\r\n                <div className=\"App\">\r\n                    {todolists}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        toDoList: state.todolists\r\n    }\r\n};\r\n\r\nconst ConnectedApp = connect(mapStateToProps,{setTodoLists,addToDoList})(App);\r\nexport default ConnectedApp;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport {reducer} from \"./reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}